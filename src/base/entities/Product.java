package base.entities;
// Generated Dec 23, 2017 8:53:57 AM by Hibernate Tools 5.2.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "Product", catalog = "HighTechStore")
public class Product implements java.io.Serializable {

	private int id;
	private Category category;
	private Producer producer;
	private String name;
	private int quantity;
	private String description;
	private boolean status;
	private double price;
	private String shortDescription;
	private String specification;
	private Set<Photo> photos = new HashSet<Photo>(0);
	private Set<ImportDetail> importDetails = new HashSet<ImportDetail>(0);
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);

	public Product() {
	}

	public Product(int id, Category category, Producer producer, String name, int quantity, boolean status,
			double price) {
		this.id = id;
		this.category = category;
		this.producer = producer;
		this.name = name;
		this.quantity = quantity;
		this.status = status;
		this.price = price;
	}

	public Product(int id, Category category, Producer producer, String name, int quantity, String description,
			boolean status, double price, String shortDescription, String specification, Set<Photo> photos,
			Set<ImportDetail> importDetails, Set<OrderDetail> orderDetails) {
		this.id = id;
		this.category = category;
		this.producer = producer;
		this.name = name;
		this.quantity = quantity;
		this.description = description;
		this.status = status;
		this.price = price;
		this.shortDescription = shortDescription;
		this.specification = specification;
		this.photos = photos;
		this.importDetails = importDetails;
		this.orderDetails = orderDetails;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Category", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Producer", nullable = false)
	public Producer getProducer() {
		return this.producer;
	}

	public void setProducer(Producer producer) {
		this.producer = producer;
	}

	@Column(name = "Name", nullable = false, length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "Description", length = 1073741823)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@Column(name = "Price", nullable = false, precision = 15, scale = 0)
	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	@Column(name = "ShortDescription", length = 1073741823)
	public String getShortDescription() {
		return this.shortDescription;
	}

	public void setShortDescription(String shortDescription) {
		this.shortDescription = shortDescription;
	}

	@Column(name = "Specification", length = 1073741823)
	public String getSpecification() {
		return this.specification;
	}

	public void setSpecification(String specification) {
		this.specification = specification;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Photo> getPhotos() {
		return this.photos;
	}

	public void setPhotos(Set<Photo> photos) {
		this.photos = photos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ImportDetail> getImportDetails() {
		return this.importDetails;
	}

	public void setImportDetails(Set<ImportDetail> importDetails) {
		this.importDetails = importDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

}
