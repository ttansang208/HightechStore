<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true">	
		<intercept-url pattern="/superadmin/**" access="ROLE_SUPERADMIN" />
		<intercept-url pattern="/admin/**" 
			access="ROLE_SUPERADMIN,ROLE_ADMIN" />
		<access-denied-handler error-page="/logins/403.html" />
		<form-login login-page="/logins.html" 
			default-target-url="/home/welcome.html"
			authentication-failure-url="/logins/login.html?error"
			username-parameter="username" 
			password-parameter="password" />
		<logout logout-success-url="/logins/login.html?logout" />
	</http>
	<beans:bean id="passwordEncoder" 
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" >
            <beans:constructor-arg name="strength" value="12" />
    </beans:bean>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="
		     SELECT UserName, Password, CASE ENABLED WHEN 1 THEN 'true' ELSE 'false' END 'Enabled' 
		     FROM Account 
		     WHERE UserName=?;" 
				authorities-by-username-query="
		    SELECT a.UserName, r.Name 
			FROM Account a, UserRole ur, Role r
			WHERE a.UserName = ur.UserName and r.ID=ur.RoleID
			AND a.UserName=? and ur.Enabled=1;" />
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>